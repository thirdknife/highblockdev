{"version":3,"file":"927c348f773405ea9b9fa14fc63d8bcf6f3b8b58-c3e7f035e8b56b8173d9.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/@prismicio/richtext/dist/composeSerializers.js","webpack://gatsby-starter-default/./node_modules/@prismicio/types/dist/value/richText.js","webpack://gatsby-starter-default/./node_modules/@prismicio/richtext/dist/types.js","webpack://gatsby-starter-default/./node_modules/@prismicio/richtext/dist/wrapMapSerializer.js","webpack://gatsby-starter-default/./node_modules/@prismicio/richtext/dist/asTree.js","webpack://gatsby-starter-default/./node_modules/@prismicio/richtext/dist/serialize.js","webpack://gatsby-starter-default/./node_modules/@prismicio/react/dist/_node_modules/@prismicio/client/dist/types/value/link.js","webpack://gatsby-starter-default/./node_modules/@prismicio/react/dist/_node_modules/@prismicio/client/dist/helpers/asLink.js","webpack://gatsby-starter-default/./node_modules/@prismicio/react/dist/_node_modules/@prismicio/client/dist/helpers/documentToLinkField.js","webpack://gatsby-starter-default/./node_modules/@prismicio/react/dist/_node_modules/@prismicio/client/dist/helpers/isFilled.js","webpack://gatsby-starter-default/./node_modules/@prismicio/react/dist/_node_modules/@prismicio/client/dist/helpers/asLinkAttrs.js","webpack://gatsby-starter-default/./node_modules/@prismicio/react/dist/_node_modules/@prismicio/client/dist/lib/isInternalURL.js","webpack://gatsby-starter-default/./node_modules/@prismicio/react/dist/react-server/PrismicLink.js","webpack://gatsby-starter-default/./node_modules/@prismicio/react/dist/lib/isInternalURL.js","webpack://gatsby-starter-default/./node_modules/@prismicio/react/dist/react-server/PrismicRichText.js","webpack://gatsby-starter-default/./node_modules/@prismicio/react/dist/PrismicProvider.js","webpack://gatsby-starter-default/./node_modules/@prismicio/react/dist/PrismicRichText.js","webpack://gatsby-starter-default/./node_modules/@prismicio/react/dist/usePrismicContext.js"],"sourcesContent":["const composeSerializers = function () {\n  for (var _len = arguments.length, serializers = new Array(_len), _key = 0; _key < _len; _key++) {\n    serializers[_key] = arguments[_key];\n  }\n  return function () {\n    for (let i = 0; i < serializers.length; i++) {\n      const serializer = serializers[i];\n      if (serializer) {\n        const res = serializer(...arguments);\n        if (res != null) {\n          return res;\n        }\n      }\n    }\n  };\n};\nexport { composeSerializers };","const RichTextNodeType = {\n  heading1: \"heading1\",\n  heading2: \"heading2\",\n  heading3: \"heading3\",\n  heading4: \"heading4\",\n  heading5: \"heading5\",\n  heading6: \"heading6\",\n  paragraph: \"paragraph\",\n  preformatted: \"preformatted\",\n  strong: \"strong\",\n  em: \"em\",\n  listItem: \"list-item\",\n  oListItem: \"o-list-item\",\n  list: \"group-list-item\",\n  oList: \"group-o-list-item\",\n  image: \"image\",\n  embed: \"embed\",\n  hyperlink: \"hyperlink\",\n  label: \"label\",\n  span: \"span\"\n};\nexport { RichTextNodeType };","import { RichTextNodeType } from \"@prismicio/types\";\nconst RichTextReversedNodeType = {\n  [RichTextNodeType.listItem]: \"listItem\",\n  [RichTextNodeType.oListItem]: \"oListItem\",\n  [RichTextNodeType.list]: \"list\",\n  [RichTextNodeType.oList]: \"oList\"\n};\nexport { RichTextReversedNodeType };","import { RichTextReversedNodeType } from \"./types.js\";\nconst wrapMapSerializer = mapSerializer => {\n  return (type, node, text, children, key) => {\n    const tagSerializer = mapSerializer[RichTextReversedNodeType[type] || type];\n    if (tagSerializer) {\n      return tagSerializer({\n        // @ts-expect-error cannot type check here\n        type,\n        // @ts-expect-error cannot type check here\n        node,\n        // @ts-expect-error cannot type check here\n        text,\n        // @ts-expect-error cannot type check here\n        children,\n        // @ts-expect-error cannot type check here\n        key\n      });\n    }\n  };\n};\nexport { wrapMapSerializer };","import { RichTextNodeType } from \"@prismicio/types\";\nconst uuid = () => {\n  return (++uuid.i).toString();\n};\nuuid.i = 0;\nconst asTree = nodes => {\n  const preparedNodes = prepareNodes(nodes);\n  const children = [];\n  for (let i = 0; i < preparedNodes.length; i++) {\n    children.push(nodeToTreeNode(preparedNodes[i]));\n  }\n  return {\n    key: uuid(),\n    children\n  };\n};\nconst createTreeNode = function (node) {\n  let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return {\n    key: uuid(),\n    type: node.type,\n    text: \"text\" in node ? node.text : void 0,\n    node,\n    children\n  };\n};\nconst createTextTreeNode = text => {\n  return createTreeNode({\n    type: RichTextNodeType.span,\n    text,\n    spans: []\n  });\n};\nconst prepareNodes = nodes => {\n  const mutNodes = nodes.slice(0);\n  for (let i = 0; i < mutNodes.length; i++) {\n    const node = mutNodes[i];\n    if (node.type === RichTextNodeType.listItem || node.type === RichTextNodeType.oListItem) {\n      const items = [node];\n      while (mutNodes[i + 1] && mutNodes[i + 1].type === node.type) {\n        items.push(mutNodes[i + 1]);\n        mutNodes.splice(i, 1);\n      }\n      if (node.type === RichTextNodeType.listItem) {\n        mutNodes[i] = {\n          type: RichTextNodeType.list,\n          items\n        };\n      } else {\n        mutNodes[i] = {\n          type: RichTextNodeType.oList,\n          items\n        };\n      }\n    }\n  }\n  return mutNodes;\n};\nconst nodeToTreeNode = node => {\n  if (\"text\" in node) {\n    return createTreeNode(node, textNodeSpansToTreeNodeChildren(node.spans, node));\n  }\n  if (\"items\" in node) {\n    const children = [];\n    for (let i = 0; i < node.items.length; i++) {\n      children.push(nodeToTreeNode(node.items[i]));\n    }\n    return createTreeNode(node, children);\n  }\n  return createTreeNode(node);\n};\nconst textNodeSpansToTreeNodeChildren = (spans, node, parentSpan) => {\n  if (!spans.length) {\n    return [createTextTreeNode(node.text)];\n  }\n  const mutSpans = spans.slice(0);\n  mutSpans.sort((a, b) => a.start - b.start || b.end - a.end);\n  const children = [];\n  for (let i = 0; i < mutSpans.length; i++) {\n    const span = mutSpans[i];\n    const parentSpanStart = parentSpan && parentSpan.start || 0;\n    const spanStart = span.start - parentSpanStart;\n    const spanEnd = span.end - parentSpanStart;\n    const text = node.text.slice(spanStart, spanEnd);\n    const childSpans = [];\n    for (let j = i; j < mutSpans.length; j++) {\n      const siblingSpan = mutSpans[j];\n      if (siblingSpan !== span) {\n        if (siblingSpan.start >= span.start && siblingSpan.end <= span.end) {\n          childSpans.push(siblingSpan);\n          mutSpans.splice(j, 1);\n          j--;\n        } else if (siblingSpan.start < span.end && siblingSpan.end > span.start) {\n          childSpans.push({\n            ...siblingSpan,\n            end: span.end\n          });\n          mutSpans[j] = {\n            ...siblingSpan,\n            start: span.end\n          };\n        }\n      }\n    }\n    if (i === 0 && spanStart > 0) {\n      children.push(createTextTreeNode(node.text.slice(0, spanStart)));\n    }\n    const spanWithText = {\n      ...span,\n      text\n    };\n    children.push(createTreeNode(spanWithText, textNodeSpansToTreeNodeChildren(childSpans, {\n      ...node,\n      text\n    }, span)));\n    if (spanEnd < node.text.length) {\n      children.push(createTextTreeNode(node.text.slice(spanEnd, mutSpans[i + 1] ? mutSpans[i + 1].start - parentSpanStart : void 0)));\n    }\n  }\n  return children;\n};\nexport { asTree };","import { asTree } from \"./asTree.js\";\nconst serialize = (richTextField, serializer) => {\n  return serializeTreeNodes(asTree(richTextField).children, serializer);\n};\nconst serializeTreeNodes = (nodes, serializer) => {\n  const serializedTreeNodes = [];\n  for (let i = 0; i < nodes.length; i++) {\n    const treeNode = nodes[i];\n    const serializedTreeNode = serializer(treeNode.type, treeNode.node, treeNode.text, serializeTreeNodes(treeNode.children, serializer), treeNode.key);\n    if (serializedTreeNode != null) {\n      serializedTreeNodes.push(serializedTreeNode);\n    }\n  }\n  return serializedTreeNodes;\n};\nexport { serialize };","const LinkType = {\n  Any: \"Any\",\n  Document: \"Document\",\n  Media: \"Media\",\n  Web: \"Web\"\n};\nexport { LinkType };","import { LinkType } from \"../types/value/link.js\";\nimport { documentToLinkField } from \"./documentToLinkField.js\";\nconst asLink = function (linkFieldOrDocument) {\n  if (!linkFieldOrDocument) {\n    return null;\n  }\n  const linkField =\n  // prettier-ignore\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore - Bug in TypeScript 4.9: https://github.com/microsoft/TypeScript/issues/51501\n  // TODO: Remove the `prettier-ignore` comment when this bug is fixed.\n  \"link_type\" in linkFieldOrDocument ? linkFieldOrDocument : documentToLinkField(linkFieldOrDocument);\n  for (var _len = arguments.length, configObjectOrTuple = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    configObjectOrTuple[_key - 1] = arguments[_key];\n  }\n  const [configObjectOrLinkResolver] = configObjectOrTuple;\n  let config;\n  if (typeof configObjectOrLinkResolver === \"function\" || configObjectOrLinkResolver == null) {\n    config = {\n      linkResolver: configObjectOrLinkResolver\n    };\n  } else {\n    config = {\n      ...configObjectOrLinkResolver\n    };\n  }\n  switch (linkField.link_type) {\n    case LinkType.Media:\n    case LinkType.Web:\n      return \"url\" in linkField ? linkField.url : null;\n    case LinkType.Document:\n      {\n        if (\"id\" in linkField && config.linkResolver) {\n          const resolvedURL = config.linkResolver(linkField);\n          if (resolvedURL != null) {\n            return resolvedURL;\n          }\n        }\n        if (\"url\" in linkField && linkField.url) {\n          return linkField.url;\n        }\n        return null;\n      }\n    case LinkType.Any:\n    default:\n      return null;\n  }\n};\nexport { asLink };","import { LinkType } from \"../types/value/link.js\";\nconst documentToLinkField = prismicDocument => {\n  var _a;\n  return {\n    link_type: LinkType.Document,\n    id: prismicDocument.id,\n    uid: prismicDocument.uid || void 0,\n    type: prismicDocument.type,\n    tags: prismicDocument.tags,\n    lang: prismicDocument.lang,\n    url: prismicDocument.url == null ? void 0 : prismicDocument.url,\n    slug: (_a = prismicDocument.slugs) == null ? void 0 : _a[0],\n    // The REST API does not include a `data` property if the data\n    // object is empty.\n    //\n    // A presence check for `prismicDocument.data` is done to\n    // support partial documents. While `documentToLinkField` is\n    // not typed to accept partial documents, passing a partial\n    // document can happen in untyped projects.\n    ...(prismicDocument.data && Object.keys(prismicDocument.data).length > 0 ? {\n      data: prismicDocument.data\n    } : {})\n  };\n};\nexport { documentToLinkField };","const isNonNullish = input => {\n  return input != null;\n};\nconst richText = field => {\n  if (!isNonNullish(field)) {\n    return false;\n  } else if (field.length === 1 && \"text\" in field[0]) {\n    return !!field[0].text;\n  } else {\n    return !!field.length;\n  }\n};\nconst imageThumbnail = thumbnail => {\n  return isNonNullish(thumbnail) && !!thumbnail.url;\n};\nconst link = field => {\n  return isNonNullish(field) && (\"id\" in field || \"url\" in field);\n};\nexport { imageThumbnail, link, richText };","import { isInternalURL } from \"../lib/isInternalURL.js\";\nimport { asLink } from \"./asLink.js\";\nimport { link } from \"./isFilled.js\";\nconst asLinkAttrs = function (linkFieldOrDocument) {\n  let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (linkFieldOrDocument && (\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore - Bug in TypeScript 4.9: https://github.com/microsoft/TypeScript/issues/51501\n  \"link_type\" in linkFieldOrDocument ? link(linkFieldOrDocument) : linkFieldOrDocument)) {\n    const target =\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore - Bug in TypeScript 4.9: https://github.com/microsoft/TypeScript/issues/51501\n    \"target\" in linkFieldOrDocument ? linkFieldOrDocument.target : void 0;\n    const rawHref = asLink(linkFieldOrDocument, config.linkResolver);\n    const href = rawHref == null ? void 0 : rawHref;\n    const isExternal = typeof href === \"string\" ? !isInternalURL(href) : false;\n    const rel = config.rel ? config.rel({\n      href,\n      isExternal,\n      target\n    }) : isExternal ? \"noreferrer\" : void 0;\n    return {\n      href,\n      target,\n      rel: rel == null ? void 0 : rel\n    };\n  }\n  return {};\n};\nexport { asLinkAttrs };","const isInternalURL = url => {\n  const isInternal = /^(\\/(?!\\/)|#)/.test(url);\n  const isSpecialLink = !isInternal && !/^https?:\\/\\//.test(url);\n  return isInternal && !isSpecialLink;\n};\nexport { isInternalURL };","import { jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { asLinkAttrs } from './../_node_modules/@prismicio/client/dist/helpers/asLinkAttrs.js';\nimport \"@prismicio/richtext\";\nimport { devMsg } from \"../lib/devMsg.js\";\nimport { isInternalURL } from \"../lib/isInternalURL.js\";\nconst defaultComponent = \"a\";\nconst PrismicLink = React.forwardRef(function PrismicLink2(_ref, ref) {\n  let {\n    field,\n    document: doc,\n    linkResolver,\n    internalComponent,\n    externalComponent,\n    ...restProps\n  } = _ref;\n  if (typeof process !== \"undefined\" && process.env.NODE_ENV === \"development\") {\n    if (field) {\n      if (!field.link_type) {\n        console.error(\"[PrismicLink] This \\\"field\\\" prop value caused an error to be thrown.\\n\", field);\n        throw new Error(\"[PrismicLink] The provided field is missing required properties to properly render a link. The link will not render. For more details, see \".concat(devMsg(\"missing-link-properties\")));\n      } else if (Object.keys(field).length > 1 && !(\"url\" in field || \"uid\" in field || \"id\" in field)) {\n        console.warn(\"[PrismicLink] The provided field is missing required properties to properly render a link. The link may not render correctly. For more details, see \".concat(devMsg(\"missing-link-properties\")), field);\n      }\n    } else if (doc) {\n      if (!(\"url\" in doc || \"id\" in doc)) {\n        console.warn(\"[PrismicLink] The provided document is missing required properties to properly render a link. The link may not render correctly. For more details, see \".concat(devMsg(\"missing-link-properties\")), doc);\n      }\n    }\n  }\n  const {\n    href: computedHref,\n    rel: computedRel,\n    ...attrs\n  } = asLinkAttrs(field !== null && field !== void 0 ? field : doc, {\n    linkResolver,\n    rel: typeof restProps.rel === \"function\" ? restProps.rel : void 0\n  });\n  let rel = computedRel;\n  if (\"rel\" in restProps && typeof restProps.rel !== \"function\") {\n    rel = restProps.rel;\n  }\n  const href = (\"href\" in restProps ? restProps.href : computedHref) || \"\";\n  const InternalComponent = internalComponent || defaultComponent;\n  const ExternalComponent = externalComponent || defaultComponent;\n  const Component = href && isInternalURL(href) ? InternalComponent : ExternalComponent;\n  return /* @__PURE__ */jsx(Component, {\n    ref,\n    ...attrs,\n    ...restProps,\n    href,\n    rel\n  });\n});\nexport { PrismicLink, defaultComponent };","const isInternalURL = url => {\n  const isInternal = /^(\\/(?!\\/)|#)/.test(url);\n  const isSpecialLink = !isInternal && !/^https?:\\/\\//.test(url);\n  return isInternal && !isSpecialLink;\n};\nexport { isInternalURL };","import { jsx, Fragment } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport * as prismicR from \"@prismicio/richtext\";\nimport { PrismicLink } from \"./PrismicLink.js\";\nimport { devMsg } from \"../lib/devMsg.js\";\nimport { richText } from './../_node_modules/@prismicio/client/dist/helpers/isFilled.js';\nconst createDefaultSerializer = args => prismicR.wrapMapSerializer({\n  heading1: _ref => {\n    let {\n      children,\n      key\n    } = _ref;\n    return /* @__PURE__ */jsx(\"h1\", {\n      children\n    }, key);\n  },\n  heading2: _ref2 => {\n    let {\n      children,\n      key\n    } = _ref2;\n    return /* @__PURE__ */jsx(\"h2\", {\n      children\n    }, key);\n  },\n  heading3: _ref3 => {\n    let {\n      children,\n      key\n    } = _ref3;\n    return /* @__PURE__ */jsx(\"h3\", {\n      children\n    }, key);\n  },\n  heading4: _ref4 => {\n    let {\n      children,\n      key\n    } = _ref4;\n    return /* @__PURE__ */jsx(\"h4\", {\n      children\n    }, key);\n  },\n  heading5: _ref5 => {\n    let {\n      children,\n      key\n    } = _ref5;\n    return /* @__PURE__ */jsx(\"h5\", {\n      children\n    }, key);\n  },\n  heading6: _ref6 => {\n    let {\n      children,\n      key\n    } = _ref6;\n    return /* @__PURE__ */jsx(\"h6\", {\n      children\n    }, key);\n  },\n  paragraph: _ref7 => {\n    let {\n      children,\n      key\n    } = _ref7;\n    return /* @__PURE__ */jsx(\"p\", {\n      children\n    }, key);\n  },\n  preformatted: _ref8 => {\n    let {\n      node,\n      key\n    } = _ref8;\n    return /* @__PURE__ */jsx(\"pre\", {\n      children: node.text\n    }, key);\n  },\n  strong: _ref9 => {\n    let {\n      children,\n      key\n    } = _ref9;\n    return /* @__PURE__ */jsx(\"strong\", {\n      children\n    }, key);\n  },\n  em: _ref10 => {\n    let {\n      children,\n      key\n    } = _ref10;\n    return /* @__PURE__ */jsx(\"em\", {\n      children\n    }, key);\n  },\n  listItem: _ref11 => {\n    let {\n      children,\n      key\n    } = _ref11;\n    return /* @__PURE__ */jsx(\"li\", {\n      children\n    }, key);\n  },\n  oListItem: _ref12 => {\n    let {\n      children,\n      key\n    } = _ref12;\n    return /* @__PURE__ */jsx(\"li\", {\n      children\n    }, key);\n  },\n  list: _ref13 => {\n    let {\n      children,\n      key\n    } = _ref13;\n    return /* @__PURE__ */jsx(\"ul\", {\n      children\n    }, key);\n  },\n  oList: _ref14 => {\n    let {\n      children,\n      key\n    } = _ref14;\n    return /* @__PURE__ */jsx(\"ol\", {\n      children\n    }, key);\n  },\n  image: _ref15 => {\n    var _node$alt;\n    let {\n      node,\n      key\n    } = _ref15;\n    const img = /* @__PURE__ */jsx(\"img\", {\n      src: node.url,\n      alt: (_node$alt = node.alt) !== null && _node$alt !== void 0 ? _node$alt : void 0,\n      \"data-copyright\": node.copyright ? node.copyright : void 0\n    });\n    return /* @__PURE__ */jsx(\"p\", {\n      className: \"block-img\",\n      children: node.linkTo ? /* @__PURE__ */jsx(PrismicLink, {\n        linkResolver: args.linkResolver,\n        internalComponent: args.internalLinkComponent,\n        externalComponent: args.externalLinkComponent,\n        field: node.linkTo,\n        children: img\n      }) : img\n    }, key);\n  },\n  embed: _ref16 => {\n    var _node$oembed$html;\n    let {\n      node,\n      key\n    } = _ref16;\n    return /* @__PURE__ */jsx(\"div\", {\n      \"data-oembed\": node.oembed.embed_url,\n      \"data-oembed-type\": node.oembed.type,\n      \"data-oembed-provider\": node.oembed.provider_name,\n      dangerouslySetInnerHTML: {\n        __html: (_node$oembed$html = node.oembed.html) !== null && _node$oembed$html !== void 0 ? _node$oembed$html : \"\"\n      }\n    }, key);\n  },\n  hyperlink: _ref17 => {\n    let {\n      node,\n      children,\n      key\n    } = _ref17;\n    return /* @__PURE__ */jsx(PrismicLink, {\n      field: node.data,\n      linkResolver: args.linkResolver,\n      internalComponent: args.internalLinkComponent,\n      externalComponent: args.externalLinkComponent,\n      children\n    }, key);\n  },\n  label: _ref18 => {\n    let {\n      node,\n      children,\n      key\n    } = _ref18;\n    return /* @__PURE__ */jsx(\"span\", {\n      className: node.data.label,\n      children\n    }, key);\n  },\n  span: _ref19 => {\n    let {\n      text,\n      key\n    } = _ref19;\n    const result = [];\n    let i = 0;\n    for (const line of text.split(\"\\n\")) {\n      if (i > 0) {\n        result.push( /* @__PURE__ */jsx(\"br\", {}, \"\".concat(i, \"__break\")));\n      }\n      result.push( /* @__PURE__ */jsx(React.Fragment, {\n        children: line\n      }, \"\".concat(i, \"__line\")));\n      i++;\n    }\n    return /* @__PURE__ */jsx(React.Fragment, {\n      children: result\n    }, key);\n  }\n});\nfunction PrismicRichText(_ref20) {\n  let {\n    linkResolver,\n    field,\n    fallback,\n    components,\n    externalLinkComponent,\n    internalLinkComponent,\n    ...restProps\n  } = _ref20;\n  return React.useMemo(() => {\n    if (typeof process !== \"undefined\" && process.env.NODE_ENV === \"development\") {\n      if (\"className\" in restProps) {\n        console.warn(\"[PrismicRichText] className cannot be passed to <PrismicRichText> since it renders an array without a wrapping component. For more details, see \".concat(devMsg(\"classname-is-not-a-valid-prop\"), \".\"), field);\n      }\n    }\n    if (richText(field)) {\n      const serializer = prismicR.composeSerializers(typeof components === \"object\" ? prismicR.wrapMapSerializer(components) : components, createDefaultSerializer({\n        linkResolver,\n        internalLinkComponent,\n        externalLinkComponent\n      }));\n      const serialized = prismicR.serialize(field, (type, node, text, children, key) => {\n        const result = serializer(type, node, text, children, key);\n        if (React.isValidElement(result) && result.key == null) {\n          return React.cloneElement(result, {\n            key\n          });\n        } else {\n          return result;\n        }\n      });\n      return /* @__PURE__ */jsx(Fragment, {\n        children: serialized\n      });\n    } else {\n      return fallback != null ? /* @__PURE__ */jsx(Fragment, {\n        children: fallback\n      }) : null;\n    }\n  }, [field, internalLinkComponent, externalLinkComponent, components, linkResolver, fallback]);\n}\nexport { PrismicRichText };","import { jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nconst PrismicContext = React.createContext({});\nconst PrismicProvider = _ref => {\n  let {\n    client,\n    linkResolver,\n    richTextComponents,\n    internalLinkComponent,\n    externalLinkComponent,\n    children\n  } = _ref;\n  const value = React.useMemo(() => ({\n    client,\n    linkResolver,\n    richTextComponents,\n    internalLinkComponent,\n    externalLinkComponent\n  }), [client, linkResolver, richTextComponents, internalLinkComponent, externalLinkComponent]);\n  return /* @__PURE__ */jsx(PrismicContext.Provider, {\n    value,\n    children\n  });\n};\nexport { PrismicContext, PrismicProvider };","import { jsx } from \"react/jsx-runtime\";\nimport * as prismicR from \"@prismicio/richtext\";\nimport { PrismicRichText as PrismicRichText$1 } from \"./react-server/PrismicRichText.js\";\nimport { usePrismicContext } from \"./usePrismicContext.js\";\nconst PrismicRichText = function PrismicRichText2(_ref) {\n  let {\n    components,\n    ...restProps\n  } = _ref;\n  const context = usePrismicContext();\n  const serializer = prismicR.composeSerializers(typeof components === \"object\" ? prismicR.wrapMapSerializer(components) : components, typeof context.richTextComponents === \"object\" ? prismicR.wrapMapSerializer(context.richTextComponents) : context.richTextComponents);\n  return /* @__PURE__ */jsx(PrismicRichText$1, {\n    components: serializer,\n    internalLinkComponent: context.internalLinkComponent,\n    externalLinkComponent: context.externalLinkComponent,\n    ...restProps\n  });\n};\nexport { PrismicRichText };","import * as React from \"react\";\nimport { PrismicContext } from \"./PrismicProvider.js\";\nconst usePrismicContext = () => {\n  return React.useContext(PrismicContext) || {};\n};\nexport { usePrismicContext };"],"names":["composeSerializers","_len","arguments","length","serializers","Array","_key","i","serializer","res","RichTextNodeType","RichTextReversedNodeType","wrapMapSerializer","mapSerializer","type","node","text","children","key","tagSerializer","uuid","toString","createTreeNode","undefined","createTextTreeNode","spans","prepareNodes","nodes","mutNodes","slice","items","push","splice","nodeToTreeNode","textNodeSpansToTreeNodeChildren","parentSpan","mutSpans","sort","a","b","start","end","span","parentSpanStart","spanStart","spanEnd","childSpans","j","siblingSpan","spanWithText","serialize","richTextField","serializeTreeNodes","preparedNodes","asTree","serializedTreeNodes","treeNode","serializedTreeNode","LinkType","asLink","linkFieldOrDocument","linkField","link_type","id","prismicDocument","uid","tags","lang","url","slug","_a","slugs","data","Object","keys","configObjectOrTuple","configObjectOrLinkResolver","config","linkResolver","resolvedURL","isNonNullish","input","asLinkAttrs","field","target","rawHref","href","isExternal","isInternal","test","isSpecialLink","isInternalURL","rel","PrismicLink","_ref","ref","document","doc","internalComponent","externalComponent","restProps","computedHref","computedRel","attrs","InternalComponent","ExternalComponent","Component","jsx","PrismicRichText","_ref20","fallback","components","externalLinkComponent","internalLinkComponent","richText","args","heading1","heading2","_ref2","heading3","_ref3","heading4","_ref4","heading5","_ref5","heading6","_ref6","paragraph","_ref7","preformatted","_ref8","strong","_ref9","em","_ref10","listItem","_ref11","oListItem","_ref12","list","_ref13","oList","_ref14","image","_ref15","_node$alt","img","src","alt","copyright","className","linkTo","embed","_ref16","_node$oembed$html","oembed","embed_url","provider_name","dangerouslySetInnerHTML","__html","html","hyperlink","_ref17","label","_ref18","_ref19","result","line","split","concat","serialized","Fragment","PrismicContext","context","richTextComponents"],"sourceRoot":""}